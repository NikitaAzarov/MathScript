#pragma once
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

typedef enum TokenType {
    NUMBER, // [0-9]

    PLUS,   // +
    MINUS,  // -
    STAR,   // *
    SLASH,  // /
    LPAREN, // (
    RPAREN, // )
    TOKEN_EOF     // \0
 } TokenType;

typedef struct Token {
    TokenType type;
    char* value;
}Token;

Token* token_initialize(TokenType type, char* value);
void token_print(Token* token);


Конечно, вот перевод:

1. הגדרה כללית
	•	Brute force (בעברית: “כוח גס”) הוא שיטה לפתרון בעיות או לביצוע התקפות המבוססת על ניסיון כל האפשרויות אחת אחרי השנייה.
	•	בתחום התכנות ואבטחת המידע, brute force משמש לעיתים קרובות לניסיון לפצח סיסמאות, מפתחות הצפנה או לפתור בעיות קומבינטוריות.

2. איך עובד brute force?
	•	האלגוריתם מנסה באופן שיטתי את כל הקומבינציות האפשריות של קלט (למשל, תווים בסיסמה).
	•	כשמדובר בנתונים בטווח קטן, brute force יכול להיות יעיל, אך עבור בעיות מורכבות היעילות שלו יורדת משמעותית עקב העלייה במספר האפשרויות.

3. יתרונות השיטה
	•	פשטות הביצוע: brute force דורש ידע מינימלי על הבעיה מעבר להבנת טווח האפשרויות.
	•	פתרון מובטח (תיאורטי): אם יש זמן ומשאבים בלתי מוגבלים, brute force ימצא בסופו של דבר את הפתרון הנכון.

4. חסרונות השיטה
	•	חוסר יעילות: זמן הביצוע גדל באופן אקספוננציאלי ככל שהבעיה נעשית מסובכת יותר.
	•	עלות גבוהה של משאבים: brute force דורש כוח מחשוב וזמן רבים.

5. דוגמאות לשימושים
	•	אבטחת מידע: התקפות על סיסמאות ומפתחות הצפנה (למשל, ניסיונות לפצח קוד PIN).
	•	תכנות: פתרון בעיות כמו “בעיית התרמיל” או חיפוש פתרונות במשחקי שחמט.
	•	קריפטוגרפיה: בדיקת עמידותם של אלגוריתמי הצפנה.

6. כיצד להתגונן מפני התקפות brute force
	•	שימוש בסיסמאות ארוכות ומורכבות (מגדיל את מספר הקומבינציות האפשריות).
	•	הגבלת מספר ניסיונות הכניסה (למשל, נעילת חשבון לאחר 3-5 ניסיונות שגויים).
	•	שימוש ב-CAPTCHA למניעת התקפות אוטומטיות.
	•	הטמעת אימות דו-שלבי (MFA).

7. חלופות ל-brute force
	•	אלגוריתמים חכמים יותר כמו אלגוריתמים חמדניים, תכנות דינמי או חיפוש עם חזרה לאחור (backtracking).
	•	שימוש בניתוח והיוריסטיקות לצמצום מרחב החיפוש.

8. עובדות מעניינות
	•	brute force אינו משמש רק תוקפים, אלא גם מומחי אבטחה לבדיקת עמידות של מערכות.
	•	התקפות brute force שהצליחו בעבר הדגישו את החשיבות של שימוש בסיסמאות מורכבות.

בהצלחה עם ההגשה שלך! אם תרצה דוגמא לקוד המראה איך brute force עובד, תוכל לבקש ואשמח לעזור.
